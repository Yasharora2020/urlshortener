service: url
frameworkVersion: '3'
provider:
  name: aws
  endpointType: REGIONAL
  runtime: python3.8
  #apiGateway:
  #  binaryMediaTypes:
  #    - '*/*'
  #logs:
  #  restApi: true
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  profile: macbook
  region: ap-southeast-2
  

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function

custom:
  pythonRequirements:
    dockerizePip: true

functions:
  urlShortener:
    handler: puturl.handler
    environment:
      URLS_TABLE_NAME: !Ref urlsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt urlsTable.Arn
    events:
      - http:
          path: create
          method: post
          cors: true

  getUrl:
    handler: geturl.handler
    environment:
      URLS_TABLE_NAME: !Ref urlsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: !GetAtt urlsTable.Arn
    events:
      - http:
          path: /{id}
          method: get
          cors: true
          integration: lambda-proxy
          
          
      - http:
          path: /{id}
          method: options
          cors: true

  
resources:
  Resources: ${file(resources.yml)}